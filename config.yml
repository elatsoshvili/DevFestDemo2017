server:
  type: simple
  applicationContextPath: /api/
  adminContextPath: /admin
  connector:
    type: http
    port: 8081



# Logging settings.
logging:
  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO
  
  appenders:
    - type: file
      # The file to which current statements will be logged.
      currentLogFilename: ./logs/app.log

      # When the log file rotates, the archived log will be renamed to this and gzipped. The
      # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
      # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
      archivedLogFilenamePattern: ./logs/app-%d.log.gz

      # The number of archived files to keep.
      archivedFileCount: 5

      # The timezone used to format dates. HINT: USE THE DEFAULT, UTC.
      timeZone: UTC+4
      
    - type: console
      threshold: INFO
      target: stdout
      # threshold: WARN
      # target: stderr

database:
  # the name of your JDBC driver
  driverClass: com.mysql.cj.jdbc.Driver

  # the username
  # TODO use user instead of root. needs database grants
  user: ${DB_USER:-root}

  # the password
  password: ${DB_PASSWORD:-}
  
  # the JDBC URL
  url: jdbc:mysql://${DB_HOST:-localhost}:3306

  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8

  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the timeout before a connection validation queries fail
  validationQueryTimeout: 3s

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s

  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute
  
  
flyway:
  # The encoding of SQL migrations. (default: UTF-8) 
  encoding: UTF-8
  # The schemas managed by Flyway. (default: default schema of the connection)
  schemas: ["app"]
  # The fully qualified class names of the callbacks for lifecycle notifications. (default: empty list)
  ### callbacks:
  # The name of the schema metadata table that will be used by Flyway. (default: schema_version)
  metaDataTableName: schema_version
  # The file name prefix for sql migrations (default: V)
  sqlMigrationPrefix: V
  # The file name separator for sql migrations (default: __)
  sqlMigrationSeparator: __
  # The file name suffix for sql migrations (default: .sql)
  sqlMigrationSuffix: .sql
  # The prefix of every placeholder. (default: ${ )
  #placeholderPrefix: ${
  # The suffix of every placeholder. (default: } )
  #placeholderSuffix: }
  # The map of <placeholder, replacementValue> to apply to sql migration scripts. (default: empty map)
  ### placeholders:
  # Locations to scan recursively for migrations. (default: db/migration)
  locations:
    - db/migration
  # The fully qualified class names of the custom MigrationResolvers to be used in addition to the built-in ones for resolving Migrations to apply. (default: empty list)
  ### resolvers:
  # Allows migrations to be run "out of order". If you already have versions 1 and 3 applied, and now a version 2 is found, it will be applied too instead of being ignored. (default: false)
  outOfOrder: false
  # The description to tag an existing schema with when executing baseline. (default: << Flyway Baseline >>)
  baselineDescription: "<< Flyway Baseline >>"
  # Whether to automatically call baseline when migrate is executed against a non-empty schema with no metadata table. (default: false)
  # Be careful when enabling this as it removes the safety net that ensures Flyway does not migrate the wrong database in case of a configuration mistake!
  baselineOnMigrate: false
  # Whether to automatically call validate or not when running migrate. (default: true)
  validateOnMigrate: true