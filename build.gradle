plugins {
    id 'java'
    id 'war'
    id 'pmd'
    id 'findbugs'
    id 'jacoco'
    id "com.github.johnrengelman.shadow" version "2.0.1"
}


sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: '1.2.0'
    compile group: 'io.dropwizard.modules', name: 'dropwizard-flyway', version: '1.2.0-1'
    compile group: 'io.dropwizard', name: 'dropwizard-jdbi', version: '1.2.0'
    compile group: 'io.dropwizard', name: 'dropwizard-hibernate', version: '1.2.0'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.8-dmr'
    testCompile group: 'io.dropwizard', name: 'dropwizard-testing', version: '1.2.0'
    testCompile group: 'io.dropwizard', name: 'dropwizard-client', version: '1.2.1'
    testCompile group: 'junit', name: 'junit', version: '4.10'
}


// FindBugs
tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
        html.destination "${buildDir}/reports/findbugs.html"
        // html.stylesheet resources.text.fromFile('config/xsl/findbugs-custom.xsl')
    }
}


// Jacoco Test Coverage
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        // html.destination file("${buildDir}/jacocoHtml")
    }
}


def mainClassName = 'ge.devfest2017.App'


// Configure the shadow jar task
shadowJar {
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    archiveName 'devfestdemo-shadow.jar'
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
// TODO commit version
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}




task startApp() << {
    javaexec { 
        main="-jar";
        args = [
                "${buildDir}/libs/devfestdemo-shadow.jar",
                "server",
                "config.yml"
               ]
      }
}


task dbMigrate() << {
    javaexec { 
        main="-jar";
        args = [
                "${buildDir}/libs/devfestdemo-shadow.jar",
                "db",
                "migrate",
                "config.yml"
               ]
      }
}

task dbClean() << {
    javaexec { 
        main="-jar";
        args = [
                "${buildDir}/libs/devfestdemo-shadow.jar",
                "db",
                "clean",
                "config.yml"
               ]
      }
}

dbClean.dependsOn shadowJar
dbMigrate.dependsOn dbClean
test.dependsOn dbMigrate

task wrapper(type: Wrapper) {
    gradleVersion = '4.3'
}